#!/bin/bash
action=$1
srcmd=$2
tmpdir=slides-$(date +%s%N |md5sum |cut -c 1-6) 

#Cleanup temp dir on exit (Ctrl+C or Ctrl+\)
trap "echo 'Cleaning up...'; rm -r $tmpdir; exit" SIGINT SIGQUIT

printHelp(){
  echo "No markdown file specified."
  echo "Usage: md2reveal.sh <md-file>"
}

if [ $# -le 1  ]
then
  printHelp
  exit
fi
#echo "mdslides started"

prepareFramework(){
    frameworkdir=$1;
    destdir=$2;
    #Copy reveal.js framework to temp dir
    mkdir $destdir
    pushd $frameworkdir;
    rsync -r --exclude=.git --exclude=*.sh --exclude=mdslides . $destdir;
    mkdir $destdir/pic;
    popd;
}


compile(){
    srcmd=$1
    destdir=$2
    cp $srcmd $destdir/tmp.md;
    cp pic/* $destdir/pic/;

    pushd $destdir;

    #Convert bg path to full path
    sed -r "s|\/\/bg=(.*)|<\!-- .slide:data-background=\"file:\/\/\/$destdir\/\1\" -->|g" tmp.md > tmp.1
    mv tmp.1 tmp.md

    #Remove comments (lines start with '//')
    sed -i "/^\/\/.*$/d" tmp.md

    #Put the content into the template
    sed -e "/Your content will be here./r tmp.md" -e "//d" $destdir/template.html> $destdir/$srcmd.html ;
    #echo "$1.html refreshed.";

    popd;
}

case "$action" in
  "serve") 
    script_dir=${0%/*};
    fulltmpdir=/tmp/$tmpdir
    prepareFramework $script_dir $fulltmpdir

    firsttime=true;

    while true 
    do 
      compile $srcmd $fulltmpdir

      if $firsttime
      then
        firefox $fulltmpdir/$srcmd.html;
        firsttime=false;
      fi 

      inotifywait -e close_write $srcmd ;
    done
    ;;
  "deploy")
    script_dir=${0%/*}
    pushd $script_dir
    source config.sh
    popd

    fulltmpdir=$dropbox_public_dir/$tmpdir
    prepareFramework $script_dir $fulltmpdir
    compile $srcmd $fulltmpdir

    echo "Your slides are published to:"
    echo "$dropbox_public_url_prefix/$tmpdir/$srcmd.html"
    ;;
  *)  
      echo "Invalid action: " $action
      printHelp
esac


